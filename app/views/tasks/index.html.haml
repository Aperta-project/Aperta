- content_for :tahi_container_class do
  full-width

- content_for :control_bar do
  #control-bar-container
    #control-bar
      %section
        %ul
          %li#paper-journal
            - if @paper.journal.logo.present?
              = image_tag @paper.journal.logo.url
            - else
              %div
                = @paper.journal.name
          %li#paper-short-title
            %h2.tasks-paper-title
              = truncated_title(@paper)
        %ul
          %li= link_to 'Article', edit_paper_path(@paper)

%ul.phases
  - @task_manager.phases.each do |phase|
    %li.phase>
      %h2= phase.name

      %ul.cards
        - phase.tasks.each do |task|
          - case task.title
          - when 'Enter Declarations'
            %li= card task
          - when 'Upload Figures'
            %li= card task
          - when 'Upload Manuscript'
            %li= card task
          - when 'Add Authors'
            %li= card task
          - when 'Register Decision'
            %li= card task
          - when 'Tech Check'
            %li
              = link_to '#', class: "card #{'completed' if task.completed?}", data: { 'card-name' => "tech-check", 'paper-title' => truncated_title(@paper), 'paper-path' => paper_path(@paper), 'paper-id' => @paper.to_param, 'task-path' => paper_task_path(@paper, task), 'assignee-id' => task.assignee_id, assignees: User.admins.map { |u| [u.id, u.full_name] }.to_json } do
                %span.glyphicon.glyphicon-ok
                = task.title
          - when 'Reviewer Report'
            %li
              = link_to '#', class: "card #{'completed' if task.completed?}", data: { 'card-name' => "reviewer-report", 'paper-title' => truncated_title(task.paper), 'paper-path' => paper_path(task.paper), 'paper-id' => task.paper.to_param, 'task-path' => paper_task_path(task.paper, task), 'assignee-id' => task.assignee_id } do
                %span.glyphicon.glyphicon-ok
                = task.title
          - when 'Assign Admin'
            %li
              = link_to '#', class: "card #{'completed' if task.completed?}", data: { 'card-name' => "paper-admin", 'paper-title' => truncated_title(task.paper), 'paper-path' => paper_path(task.paper), 'paper-id' => task.paper.to_param, 'task-path' => paper_task_path(task.paper, task), 'admin-id' => task.assignee_id, admins: User.admins.map { |u| [u.id, u.full_name] }.to_json } do
                %span.glyphicon.glyphicon-ok
                = task.title
          - when 'Assign Editor'
            %li
              = link_to '#', class: "card #{'completed' if task.completed?}", data: { 'card-name' => "assign-editor", 'paper-title' => truncated_title(task.paper), 'paper-path' => paper_path(task.paper), 'paper-id' => task.paper.to_param, 'task-path' => paper_task_path(task.paper, task), 'assignee-id' => task.assignee_id, assignees: User.admins.map { |u| [u.id, u.full_name] }.to_json, 'editor-id' => task.paper_role.user_id, editors: User.editors_for(task.paper.journal).map { |u| [u.id, u.full_name] } } do
                %span.glyphicon.glyphicon-ok
                = task.title
          - when 'Assign Reviewers'
            %li
              = link_to '#', class: "card #{'completed' if task.completed?}", data: { 'card-name' => "assign-reviewers", 'paper-title' => truncated_title(task.paper), 'paper-path' => paper_path(task.paper), 'paper-id' => task.paper.to_param, 'task-path' => paper_task_path(task.paper, task), 'assignee-id' => task.assignee_id, assignees: User.editors_for(task.paper.journal).map { |u| [u.id, u.full_name] }.to_json, 'reviewer-ids' => task.paper_roles, reviewers: User.reviewers_for(task.paper.journal).map { |u| [u.id, u.full_name] } } do
                %span.glyphicon.glyphicon-ok
                = task.title
          - else
            %li
              = link_to '#', class: "card #{'completed' if task.completed?}", data: { 'overlay-name' => "card-#{task.id}", 'overlay-title' => truncated_title(@paper), 'paper-id' => @paper.to_param, 'task-id' => task.to_param, 'task-completed' => task.completed? } do
                %span.glyphicon.glyphicon-ok
                = task.title
            .hidden{id: "card-#{task.id}-content"}
              = render task, paper: @paper
        %li
          :ruby
            haml_io << link_to('Add new card', '#',
              data: {
                assignees: User.admins.map { |u| [u.id, u.full_name] }.to_json,
                url: paper_tasks_path(@paper, format: :json),
                phase_id: phase.id,
                paper_short_title: truncated_title(@paper)
              },
              class: "secondary-button react-new-card-overlay")
