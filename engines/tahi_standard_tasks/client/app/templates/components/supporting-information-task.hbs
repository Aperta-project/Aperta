{{partial "task-completed-section"}}

{{#unless legendsAllowed}}
  <div class="task-main-content">
    <p>
      For each Supporting Information file,
      include a legend at the end of your manuscript after any figures.
    </p>
  </div>
{{/unless}}

<div class="task-main-content">
  <div class="supporting-information-files">
    {{#each filesWithErrors as |fileWithErrors|}}
      {{supporting-information-file model=fileWithErrors
                                    updateFile=(action "updateFile")
                                    deleteFile=(action "deleteFile")
                                    isEditable=isEditable}}
    {{/each}}
  </div>

  <div id="paper-file-uploads">
    {{#each uploads as |upload|}}
      {{upload-preview upload=upload}}
    {{/each}}
  </div>
  {{#if isEditable}}
    <span class="button-primary button--green fileinput-button si-files-upload-button">
      <span>Add Files</span>
      {{file-uploader id="file_attachment"
                      filePrefix="supporting-info"
                      url=uploadUrl
                      start="uploadStarted"
                      done="uploadFinished"
                      cancel="cancelUploads"
                      progress="uploadProgress"
                      multiple=true
                      disabled=notEditable}}
    </span>

    <div>
      Please provide files in their native file formats, e.g. Word, Excel, WAV, MPEG, JPG, etc.
    </div>

    <div id="chartContainer">

  <script type="text/javascript">
    var svg = dimple.newSvg("#chartContainer", 590, 400);
    d3.tsv("/test_csv.csv", function (data) {
      var myChart = new dimple.chart(svg, data);
      myChart.setBounds(60, 30, 495, 330);

      // Define all the axes
      var xAxis = myChart.addMeasureAxis("x", "Distribution");
      var yAxis = myChart.addMeasureAxis("y", "Price");
      var segments = myChart.addMeasureAxis("p", "Unit Sales");
      var size = myChart.addMeasureAxis("z", "Sales Value");
      var ring = myChart.addSeries(["Price Tier", "Channel"], dimple.plot.pie);
      var pie = myChart.addSeries(["Price Tier", "Owner"], dimple.plot.pie);

      // Zoom in the axis bounds
      xAxis.overrideMin = 40;
      xAxis.overrideMax = 70;
      yAxis.overrideMax = 150;

      // Set the maximum radius for the bubbles
      ring.radius = 75;
      pie.radius = 75;

      // Create fixed 10px ring with a 5px
      // margin (negative sizes are calculated inwards)
      ring.innerRadius = "-10px";
      pie.outerRadius = "-15px";

      // Draw averages for the pie and ring
      ring.aggregate = dimple.aggregateMethod.avg;
      pie.aggregate = dimple.aggregateMethod.avg;

      // Animate by date
      myChart.setStoryboard("Date");

      myChart.draw();
    });
  </script>
</div>
  {{/if}}
</div>
