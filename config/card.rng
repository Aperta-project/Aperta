<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!--
    card.rnc: If this file is card.rnc: Do not forget to update card.rng if you
    change this file! This is not actually used by Aperta, but it is far easier to
    write than XML. .rnc is the RelaxNG compact schema format. We translate it
    into the xml format using a utility called `trang`. `trang `is a java utility
    from RelaxNG. if you're using apt you can install it via `sudo apt-get install
    trang`, otherwise clone the repo at https://github.com/relaxng/jing-trang and
    follow the instructions there. Run trang (or the trang.jar file)as follows to
    translate the compact rnc format to the rng that gets used in the XmlCardLoader
      `trang -I rnc -O rng card.rnc card.rng`
    
    card.rng: If this file is card.rng, please edit card.rnc instead. You will be happier.
  -->
  <define name="file-type">
    <data type="string">
      <param name="pattern">\.\w*</param>
    </data>
  </define>
  <define name="possible-value">
    <element name="possible-value">
      <attribute name="label"/>
      <attribute name="value"/>
    </element>
  </define>
  <define name="accepted-file-type">
    <element name="possible-value">
      <attribute name="label"/>
      <attribute name="value">
        <ref name="file-type"/>
      </attribute>
    </element>
  </define>
  <!-- Inputs -->
  <define name="radio-input">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="value-type">
        <choice>
          <value>text</value>
          <value>boolean</value>
        </choice>
      </attribute>
      <attribute name="content-type">
        <value>radio</value>
      </attribute>
      <optional>
        <attribute name="required-field">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="default-answer-value"/>
      </optional>
      <optional>
        <attribute name="allow-annotations">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <interleave>
        <optional>
          <element name="instruction-text">
            <ref name="html"/>
          </element>
        </optional>
        <optional>
          <element name="text">
            <ref name="html"/>
          </element>
        </optional>
      </interleave>
      <zeroOrMore>
        <ref name="possible-value"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="check-box-input">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="content-type">
        <value>check-box</value>
      </attribute>
      <optional>
        <attribute name="required-field">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="default-answer-value">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <attribute name="value-type">
        <value>boolean</value>
      </attribute>
      <optional>
        <attribute name="allow-annotations">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <interleave>
        <optional>
          <element name="instruction-text">
            <ref name="html"/>
          </element>
        </optional>
        <interleave>
          <optional>
            <element name="label">
              <text/>
            </element>
          </optional>
          <optional>
            <element name="text">
              <ref name="html"/>
            </element>
          </optional>
        </interleave>
      </interleave>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="file-uploader">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <optional>
        <attribute name="error-message"/>
      </optional>
      <attribute name="content-type">
        <value>file-uploader</value>
      </attribute>
      <attribute name="value-type">
        <choice>
          <value>attachment</value>
          <value>manuscript</value>
          <value>sourcefile</value>
        </choice>
      </attribute>
      <optional>
        <attribute name="required-field">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="allow-multiple-uploads">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="allow-file-captions">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="allow-annotations">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <interleave>
        <optional>
          <element name="instruction-text">
            <ref name="html"/>
          </element>
        </optional>
        <interleave>
          <zeroOrMore>
            <element name="validation">
              <attribute name="validation-type">
                <value>file-name</value>
              </attribute>
              <element name="error-message">
                <text/>
              </element>
              <element name="validator">
                <text/>
              </element>
            </element>
          </zeroOrMore>
          <optional>
            <element name="label">
              <text/>
            </element>
          </optional>
          <optional>
            <element name="text">
              <ref name="html"/>
            </element>
          </optional>
        </interleave>
      </interleave>
      <zeroOrMore>
        <ref name="accepted-file-type"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="date-picker">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="value-type">
        <value>text</value>
      </attribute>
      <attribute name="content-type">
        <value>date-picker</value>
      </attribute>
      <optional>
        <attribute name="required-field">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <element name="text">
        <ref name="html"/>
      </element>
    </element>
  </define>
  <!-- for now duplicating radio-input for dropdown -->
  <define name="dropdown-input">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="value-type">
        <choice>
          <value>text</value>
          <value>boolean</value>
        </choice>
      </attribute>
      <attribute name="content-type">
        <value>dropdown</value>
      </attribute>
      <optional>
        <attribute name="required-field">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="default-answer-value"/>
      </optional>
      <optional>
        <attribute name="allow-annotations">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <interleave>
        <optional>
          <element name="instruction-text">
            <ref name="html"/>
          </element>
        </optional>
        <element name="text">
          <ref name="html"/>
        </element>
      </interleave>
      <oneOrMore>
        <ref name="possible-value"/>
      </oneOrMore>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="tech-check">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="content-type">
        <value>tech-check</value>
      </attribute>
      <optional>
        <attribute name="required-field">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="default-answer-value">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <attribute name="value-type">
        <value>boolean</value>
      </attribute>
      <optional>
        <attribute name="allow-annotations">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <interleave>
          <optional>
            <element name="instruction-text">
              <ref name="html"/>
            </element>
          </optional>
          <element name="text">
            <ref name="html"/>
          </element>
        </interleave>
      </optional>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="sendback-reason">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="content-type">
        <value>sendback-reason</value>
      </attribute>
      <attribute name="value-type">
        <value>boolean</value>
      </attribute>
      <interleave>
        <optional>
          <element name="label">
            <text/>
          </element>
        </optional>
        <optional>
          <element name="text">
            <ref name="html"/>
          </element>
        </optional>
      </interleave>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="text-input">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="value-type">
        <choice>
          <value>text</value>
          <value>html</value>
        </choice>
      </attribute>
      <optional>
        <attribute name="editor-style"/>
      </optional>
      <attribute name="content-type">
        <choice>
          <value>short-input</value>
          <value>paragraph-input</value>
        </choice>
      </attribute>
      <optional>
        <attribute name="required-field">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <optional>
        <attribute name="default-answer-value"/>
      </optional>
      <optional>
        <attribute name="allow-annotations">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
      </optional>
      <interleave>
        <optional>
          <element name="instruction-text">
            <ref name="html"/>
          </element>
        </optional>
        <interleave>
          <optional>
            <element name="text">
              <ref name="html"/>
            </element>
          </optional>
          <zeroOrMore>
            <element name="validation">
              <attribute name="validation-type">
                <choice>
                  <value>string-match</value>
                  <value>string-length-minimum</value>
                  <value>string-length-maximum</value>
                </choice>
              </attribute>
              <element name="error-message">
                <text/>
              </element>
              <element name="validator">
                <text/>
              </element>
            </element>
          </zeroOrMore>
        </interleave>
      </interleave>
    </element>
  </define>
  <!-- Contents -->
  <define name="text-content">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="content-type">
        <value>text</value>
      </attribute>
      <element name="text">
        <ref name="html"/>
      </element>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="display-children-content">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <optional>
        <attribute name="child-tag">
          <value>li</value>
        </attribute>
      </optional>
      <optional>
        <attribute name="custom-class"/>
      </optional>
      <optional>
        <attribute name="custom-child-class"/>
      </optional>
      <optional>
        <attribute name="wrapper-tag"/>
      </optional>
      <attribute name="content-type">
        <value>display-children</value>
      </attribute>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="display-with-value-content">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="content-type">
        <value>display-with-value</value>
      </attribute>
      <attribute name="visible-with-parent-answer"/>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="export-paper">
    <element name="content">
      <optional>
        <attribute name="ident"/>
      </optional>
      <attribute name="content-type">
        <value>export-paper</value>
      </attribute>
      <interleave>
        <element name="label">
          <text/>
        </element>
        <optional>
          <element name="text">
            <ref name="html"/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="if">
    <element name="content">
      <attribute name="content-type">
        <value>if</value>
      </attribute>
      <attribute name="condition"/>
      <ref name="content"/>
      <optional>
        <ref name="content"/>
      </optional>
    </element>
  </define>
  <define name="error-message">
    <element name="content">
      <attribute name="content-type">
        <value>error-message</value>
      </attribute>
      <attribute name="key"/>
      <optional>
        <element name="text">
          <text/>
        </element>
      </optional>
    </element>
  </define>
  <define name="html">
    <interleave>
      <zeroOrMore>
        <ref name="any-element"/>
      </zeroOrMore>
      <text/>
    </interleave>
  </define>
  <define name="any-element">
    <element>
      <anyName/>
      <zeroOrMore>
        <ref name="any-attribute"/>
      </zeroOrMore>
      <ref name="html"/>
    </element>
  </define>
  <define name="any-attribute">
    <attribute>
      <anyName/>
    </attribute>
  </define>
  <define name="content">
    <choice>
      <ref name="radio-input"/>
      <ref name="text-input"/>
      <ref name="text-content"/>
      <ref name="display-children-content"/>
      <ref name="display-with-value-content"/>
      <ref name="export-paper"/>
      <ref name="check-box-input"/>
      <ref name="file-uploader"/>
      <ref name="dropdown-input"/>
      <ref name="date-picker"/>
      <ref name="tech-check"/>
      <ref name="sendback-reason"/>
      <ref name="if"/>
      <ref name="error-message"/>
    </choice>
  </define>
  <start>
    <element name="card">
      <attribute name="required-for-submission">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
      <attribute name="workflow-display-only">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
      <ref name="content"/>
    </element>
  </start>
</grammar>
