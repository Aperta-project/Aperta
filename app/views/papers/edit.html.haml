- content_for :control_bar do
  #control-bar-container
    #control-bar
      %section
        %ul
          %li#short-title-editable{contenteditable: true}= @paper.short_title
          %li#revision R0
        %ul
          %li
            = link_to 'Save', paper_path(@paper, format: :json), id: 'save-button'
          %li
            = link_to 'Submit', new_paper_submission_path(@paper)

%main
  %article
    %div
      #toolbar

      .title
        %h2#title-editable{contenteditable: true, placeholder: 'Type your article title here'}
          = @paper.title

      #abstract-editable.editable{contenteditable: true, placeholder: 'Type your abstract here'}
        = @paper.abstract.html_safe

      #authors{data: { 'overlay-name' => 'authors' }}
        Click here to add authors

      #authors-content.hidden
        .content
          = link_to '#', id: 'add-author', class: 'btn btn-default btn-xs' do
            %span.glyphicon.glyphicon-plus-sign
            Add new
          %ul.authors
            - @paper.authors.each do |author|
              %li.author
                %h4
                  %span.author-first-name
                    = author["first_name"]
                  %span.author-last-name
                    = author["last_name"]
                %h4.author-email= author["email"]
                %h4.author-affiliation= author["affiliation"]


      #author-form-template.hidden
        .form-group.form-inline
          .form-group
            = text_field_tag :author_first_name, '', class: 'form-control', placeholder: 'First name'
          .form-group
            = text_field_tag :author_last_name, '', class: 'form-control', placeholder: 'Last name'
        .form-group
          = text_field_tag :author_email, '',class: 'form-control', placeholder: 'Email'
        .form-group.form-inline
          .form-group
            = text_field_tag :author_affiliation, '',class: 'form-control', placeholder: 'Affiliation'
          .form-group
            = submit_tag 'done', class: 'btn btn-primary'

      #body-editable.editable{contenteditable: true, placeholder: 'Type the body of your article here'}
        = @paper.body.html_safe

  %aside
    %div
      = link_to 'Declarations', '#', data: { 'overlay-name' => 'declarations' }, class: 'card'

      #declarations-content.hidden
        %h3 Declarations
        - @paper.declarations.each do |declaration|
          = form_for @paper, remote: true, format: :json, html: { class: 'js-submit-on-change' } do |f|
            = f.fields_for :declarations, declaration do |declaration_fields|
              .form-group.declaration
                = declaration_fields.label :answer, declaration_fields.object.question
                = declaration_fields.text_area :answer, class: 'form-control', rows: 6

      = link_to 'Upload Figures', '#', data: { 'overlay-name' => 'upload-figures' }, class: 'card'
      #upload-figures-content.hidden
        %span.btn.btn-primary.fileinput-button
          %span.glyphicon.glyphicon-plus-sign
          Add new
          = form_for [@paper, Figure.new], format: :json do |f|
            = f.file_field :attachment, multiple: true, class: 'js-jquery-fileupload'
        %ul#paper-figure-uploads
        %ul#paper-figures
          - @paper.figures.each do |figure|
            %li= image_tag figure.attachment

      #upload-figures-content.hidden
        %h3 Upload Figures

      = link_to 'Upload Manuscript', '#', data: { 'overlay-name' => 'upload-manuscript' }, class: 'card'
      #upload-manuscript-content.hidden
        = form_tag({action: :upload}, multipart: true) do
          .form-group
            = label_tag :upload_file, 'Upload Word Document'
            = file_field_tag :upload_file, class: 'form-control'
            %p.help-block Uploading a file will replace your current work.
            = button_tag "Upload File", type: 'submit', class: 'btn btn-primary'

      = form_for @paper, remote: true, format: :json, html: { class: 'js-submit-on-change' } do |f|
        .form-group
          = f.label :paper_type
          = f.select :paper_type, Paper::PAPER_TYPES.map { |t| [t.humanize, t] }

