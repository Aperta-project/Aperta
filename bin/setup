#!/usr/bin/env ruby
require 'pathname'
begin
  require 'active_support/core_ext/object/blank'
rescue LoadError
  fail "Please run `gem install activesupport` first"
end

$os = `uname`.chomp.downcase.intern
unless $os == :darwin || ($os == :linux && (`which apt-get` != ""))
  fail 'This setup script is only designed for Mac OS or Debian/Ubuntu.'
end

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../',  __FILE__)

def run_pg(cmd)
  case $os
  when :linux
    cmd = cmd.gsub("\"", "\\\"") # escape quotes
    `sudo su postgres -c "#{cmd}"`
  when :darwn
    `#{cmd}`
  end
end

Dir.chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file:

  puts '== Installing dependencies =='

  case $os
  when :darwin
    if `brew ls --versions imagemagick`.present?
      puts "imagemagick is already installed"
    else
      system "brew install imagemagick --with-libtiff"
    end

    %w( postgresql redis go node watchman qt ).each do |package|
      if `brew ls --versions #{package}`.present?
        puts "#{package} is already installed"
      else
        system "brew install #{package}"
      end
    end
  when :linux
    system "sudo apt-get install -y imagemagick postgresql redis-server golang nodejs qt5-default libqt5webkit5-dev"
  end

  if ENV['GOPATH'].blank?
    puts <<MESSAGE
 Error: Please ensure your $GOPATH is configured correctly and run again.
 Add the following to your shell initialization file (.bashrc, .zshrc, etc)

    export GOPATH="$HOME/go"
    export PATH=$PATH:$GOPATH/bin
MESSAGE
    Kernel.exit
  end
  system 'go get github.com/tahi-project/golang-eventsource'

  puts '== Installing gems =='
  system 'gem install bundler --conservative'
  system 'bundle check || bundle install'

  puts '== Installing javascript dependencies =='
  system 'npm install'
  system 'bundle exec rake ember-cli:install_dependencies'

  if run_pg("psql postgres -tAc \"SELECT 1 FROM pg_roles WHERE rolname='tahi'\"").present?
    puts '== PostgreSQL user already exists =='
  else
    puts '== Creating the tahi PostgreSQL user =='
    run_pg('createuser -s -r tahi')
  end

  puts '== Copying sample files =='

  unless File.exist?('config/database.yml')
    system 'cp config/database.yml.sample config/database.yml'
  end

  unless File.exist?('.env.development')
    system 'cp .env-sample .env.development'
  end

  puts '== Add binstubs to PATH in ~/.zshenv like this: =='
  puts 'export PATH=".git/safe/../../bin:$PATH"'

  puts '== Marking this project"s binstubs as safe =='
  system 'mkdir -p .git/safe'

  puts '== Adding pre-commit hook =='
  system 'overcommit .'

  puts '== Preparing database =='
  system 'sleep 10; bin/rake db:setup'
  system 'bin/rake db:setup RAILS_ENV=test'

  puts '== Removing old logs and tempfiles =='
  system 'rm -f log/**/*'
  system 'rm -rf tmp/cache'
end
