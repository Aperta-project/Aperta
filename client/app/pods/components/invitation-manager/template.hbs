{{!-- Copyright (c) 2018 Public Library of Science --}}

{{!-- Permission is hereby granted, free of charge, to any person obtaining a --}}
{{!-- copy of this software and associated documentation files (the "Software"), --}}
{{!-- to deal in the Software without restriction, including without limitation --}}
{{!-- the rights to use, copy, modify, merge, publish, distribute, sublicense, --}}
{{!-- and/or sell copies of the Software, and to permit persons to whom the --}}
{{!-- Software is furnished to do so, subject to the following conditions: --}}

{{!-- The above copyright notice and this permission notice shall be included in --}}
{{!-- all copies or substantial portions of the Software. --}}

{{!-- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR --}}
{{!-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, --}}
{{!-- FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL --}}
{{!-- THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER --}}
{{!-- LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING --}}
{{!-- FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER --}}
{{!-- DEALINGS IN THE SOFTWARE. --}}

{{#util/async-content concurrencyTask=loadDecisions}}
  {{#with (hash group=(component 'invitation-group'
                        activeInvitation=activeInvitation
                        activeInvitationState=activeInvitationState
                        composedInvitation=composedInvitation
                        owner=task
                        destroyInvite=(action 'destroyInvite')
                        saveInvite=(action 'saveInvite')
                        setRowState=(action 'toggleActiveInvitation')
                        class='active-invitations')
                      ) as |i| }}

    {{#if groupByDecision}}
      {{i.group invitations=draftDecisionInvitations}}
    {{else}}
      {{i.group invitations=persistedInvitations}}
    {{/if}}

    {{#unless isEditingInvitation}}
      <div class="invitation-email-entry">
        {{#auto-suggest endpoint=autoSuggestSourceUrl
                        queryParameter="query"
                        inputId="invitation-recipient"
                        placeholder=placeholder
                        errorMessage=emailErrorMessage
                        parseResponseFunction=parseUserSearchResponse
                        resultText=autoSuggestSelectedText
                        itemSelected="didSelectUser"
                        inputChanged="inputChanged"
                        focusOut="focusOut"
                        itemDisplayTextFunction=displayUserSelected
                        as |user|}}
          {{user.full_name}} &lt;{{user.email}}&gt;
        {{/auto-suggest}}
        {{#if (eq inviteeRole "Reviewer")}}
          {{invitation-due-period value=dueIn}}
        {{/if}}
        <button class="button-secondary button--green invitation-email-entry-button {{if disableButton "button--disabled"}}"
                {{action "createInvitation"}}>
          Add to Queue
        </button>
        {{#if createInvitation.isRunning}}
          <div class="invitation-email-entry-progress animation-fade-in">
            {{progress-spinner visible=true size="small"}}
          </div>
        {{/if}}
      </div>
    {{/unless}}

    {{#if groupByDecision}}
      {{#each sortedPreviousDecisions as |decision|}}
        <div class='invitation-revision-round'>
          v{{decision.revisionNumber}} {{humanize decision.verdict}}
        </div>
        {{i.group invitations=(filter-by "inviteeRole" task.inviteeRole decision.invitations)
            previousRound=true
            class='expired-invitations'}}
      {{/each}}
    {{/if}}
  {{/with}}
{{else}}
  <h2> Loading invitations... </h2>
  {{progress-spinner visible=true size="large" align="middle"}}
{{/util/async-content}}
