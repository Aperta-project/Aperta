AllCops:
  Exclude:
    - 'db/schema.rb'
    - 'lib/generators/tahi/task/templates/*'
  TargetRubyVersion: 2.2

Rails:
  Enabled: true

Metrics/AbcSize:
  # This is a good metric; rails gives us a few more .'s per line
  # than occurs in raw ruby, so we bump this number up from the
  # default of 15.
  Max: 20

Metrics/ClassLength:
  Enabled: false

Metrics/MethodLength:
  # The linux kernel styleguide puts this number at 24; the rubocop
  # default is 10 (!). Seeking a happy medium; particularly for those
  # methods which are all one case statement, or return a single
  # (but long) hash.
  CountComments: false
  Max: 20

Style/BlockDelimiters:
  # It is acceptable and encouraged that if you are chaining a method
  # on the end of a multiline block, you will want to use braces and
  # not a do/end.  Seeing a brace at the beginning of a mult-line block
  # should be your clue that more is going to happen at the end of it.
  Enabled: false

Layout/MultilineOperationIndentation:
  EnforcedStyle: indented

Style/RescueModifier:
  Enabled: false

Layout/MultilineMethodCallIndentation:
  # Both styles of method call indentation are acceptable, and depending on
  # folks' editor configurations the default might be to indent a single level
  # or to align subsequent lines with the first call
  Enabled: false

Layout/AlignParameters:
  # Both styles of method call indentation are acceptable, and depending on
  # folks' editor configurations the default might be to indent a single level
  # or to align subsequent lines with the first parameter
  Enabled: false

Style/StringLiterals:
  # English text needs double quotes, to avoid escaping the very
  # common apostrophe.
  Enabled: false

Style/StringLiteralsInInterpolation:
  # Ditto above
  Enabled: false

Metrics/LineLength:
  Enabled: false

Style/PredicateName:
  Exclude:
    # has_foo? is idiomatic usage in page objects
    - '**/spec/**/*'

Style/ClassCheck:
  # Sometimes is_a? is better, sometimes 'kind_of?'.
  Enabled: false

Rails/Delegate:
  # This cop is not rigorously written, and flags cases where delegate
  # cannot replace the flagged method.
  Enabled: false

Style/ClassAndModuleChildren:
  # Rails autoloading can get us into situations where it is very
  # difficult to disambiguate the long-hand version of
  # Module::Submodule definitions
  Enabled: false

Style/Documentation:
  Enabled: false

Style/WordArray:
  # If an array is *accidentally* made of single-word strings, being
  # forced to use %w means being forced to rewrite the whole array as
  # soon as one entry becomes two words
  Enabled: false
