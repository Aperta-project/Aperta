<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <!--
    card.rnc: If this file is card.rnc: Do not forget to update card.rng if you
    change this file! This is not actually used by Aperta, but it is far easier to
    write than XML. .rnc is the RelaxNG compact schema format. We translate it
    into the xml format using a utility called `trang`. `trang `is a java utility
    from RelaxNG. if you're using apt you can install it via `sudo apt-get install
    trang`, otherwise clone the repo at https://github.com/relaxng/jing-trang and
    follow the instructions there. Run trang (or the trang.jar file)as follows to
    translate the compact rnc format to the rng that gets used in the XmlCardLoader
    
      `trang -I rnc -O rng card.rnc card.rng`
    
    card.rng: Do not edit the card.rng file generated by trang; edit card.rnc instead.
    
    Please refer to http://books.xmlschemata.org/relaxng/page2.html  for a useful guide on working
    with RelaxNG schemas
  -->
  <define name="file-type">
    <data type="string">
      <param name="pattern">\.\w*</param>
    </data>
  </define>
  <define name="possible-value">
    <element name="possible-value">
      <attribute name="label"/>
      <attribute name="value"/>
    </element>
  </define>
  <define name="accepted-file-type">
    <element name="possible-value">
      <attribute name="label"/>
      <attribute name="value">
        <ref name="file-type"/>
      </attribute>
    </element>
  </define>
  <define name="allow-annotations">
    <attribute name="allow-annotations">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="required-field">
    <attribute name="required-field">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </attribute>
  </define>
  <define name="default-answer-boolean">
    <element name="default-answer-value">
      <choice>
        <value>true</value>
        <value>false</value>
      </choice>
    </element>
  </define>
  <define name="default-answer-text">
    <element name="default-answer-value">
      <text/>
    </element>
  </define>
  <define name="html">
    <interleave>
      <zeroOrMore>
        <ref name="any-element"/>
      </zeroOrMore>
      <text/>
    </interleave>
  </define>
  <define name="any-attribute">
    <attribute>
      <anyName/>
    </attribute>
  </define>
  <define name="any-element">
    <element>
      <anyName/>
      <zeroOrMore>
        <ref name="any-attribute"/>
      </zeroOrMore>
      <ref name="html"/>
    </element>
  </define>
  <define name="file-validation">
    <element name="validation">
      <interleave>
        <attribute name="validation-type">
          <value>file-name</value>
        </attribute>
        <element name="error-message">
          <text/>
        </element>
        <element name="validator">
          <text/>
        </element>
      </interleave>
    </element>
  </define>
  <define name="instructions-label-required-text">
    <interleave>
      <optional>
        <element name="instruction-text">
          <ref name="html"/>
        </element>
      </optional>
      <optional>
        <element name="label">
          <ref name="html"/>
        </element>
      </optional>
      <element name="text">
        <ref name="html"/>
      </element>
    </interleave>
  </define>
  <define name="instructions-label-optional-text">
    <interleave>
      <optional>
        <element name="instruction-text">
          <ref name="html"/>
        </element>
      </optional>
      <optional>
        <element name="label">
          <ref name="html"/>
        </element>
      </optional>
      <optional>
        <element name="text">
          <ref name="html"/>
        </element>
      </optional>
    </interleave>
  </define>
  <define name="input-attributes">
    <interleave>
      <optional>
        <attribute name="ident"/>
      </optional>
      <optional>
        <ref name="required-field"/>
      </optional>
      <optional>
        <ref name="allow-annotations"/>
      </optional>
    </interleave>
  </define>
  <define name="string-validation">
    <element name="validation">
      <interleave>
        <attribute name="validation-type">
          <choice>
            <value>string-match</value>
            <value>string-length-minimum</value>
            <value>string-length-maximum</value>
          </choice>
        </attribute>
        <element name="error-message">
          <text/>
        </element>
        <element name="validator">
          <text/>
        </element>
      </interleave>
    </element>
  </define>
  <define name="text-input-attributes">
    <interleave>
      <ref name="input-attributes"/>
      <optional>
        <ref name="default-answer-text"/>
      </optional>
      <ref name="instructions-label-optional-text"/>
      <zeroOrMore>
        <ref name="string-validation"/>
      </zeroOrMore>
    </interleave>
  </define>
  <!--
    Inputs
    Please keep these in alphabetical order.
  -->
  <define name="check-box-input">
    <element name="CheckBox">
      <interleave>
        <ref name="input-attributes"/>
        <attribute name="value-type">
          <value>boolean</value>
        </attribute>
        <optional>
          <ref name="default-answer-boolean"/>
        </optional>
        <ref name="instructions-label-optional-text"/>
        <zeroOrMore>
          <ref name="content"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="date-picker">
    <element name="DatePicker">
      <interleave>
        <ref name="input-attributes"/>
        <attribute name="value-type">
          <value>text</value>
        </attribute>
        <ref name="instructions-label-required-text"/>
      </interleave>
    </element>
  </define>
  <define name="dropdown-input">
    <element name="Dropdown">
      <interleave>
        <ref name="input-attributes"/>
        <attribute name="value-type">
          <choice>
            <value>text</value>
            <value>boolean</value>
          </choice>
        </attribute>
        <optional>
          <ref name="default-answer-text"/>
        </optional>
        <ref name="instructions-label-required-text"/>
        <oneOrMore>
          <ref name="possible-value"/>
        </oneOrMore>
        <zeroOrMore>
          <ref name="content"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="email-editor">
    <element name="EmailEditor">
      <interleave>
        <ref name="input-attributes"/>
        <optional>
          <attribute name="letter-template"/>
        </optional>
        <optional>
          <attribute name="button-label"/>
        </optional>
        <attribute name="value-type">
          <value>html</value>
        </attribute>
      </interleave>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="file-uploader">
    <element name="FileUploader">
      <interleave>
        <ref name="input-attributes"/>
        <attribute name="value-type">
          <choice>
            <value>attachment</value>
            <value>manuscript</value>
            <value>sourcefile</value>
          </choice>
        </attribute>
        <optional>
          <attribute name="error-message"/>
        </optional>
        <optional>
          <attribute name="allow-file-captions">
            <choice>
              <value>true</value>
              <value>false</value>
            </choice>
          </attribute>
        </optional>
        <optional>
          <attribute name="allow-multiple-uploads">
            <choice>
              <value>true</value>
              <value>false</value>
            </choice>
          </attribute>
        </optional>
        <ref name="instructions-label-optional-text"/>
        <zeroOrMore>
          <ref name="file-validation"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="accepted-file-type"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="paragraph-input">
    <element name="ParagraphInput">
      <interleave>
        <ref name="text-input-attributes"/>
        <attribute name="value-type">
          <choice>
            <value>text</value>
            <value>html</value>
          </choice>
        </attribute>
        <optional>
          <attribute name="editor-style"/>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="radio-input">
    <element name="Radio">
      <interleave>
        <ref name="input-attributes"/>
        <attribute name="value-type">
          <choice>
            <value>text</value>
            <value>boolean</value>
          </choice>
        </attribute>
        <optional>
          <ref name="default-answer-text"/>
        </optional>
        <ref name="instructions-label-optional-text"/>
        <zeroOrMore>
          <ref name="possible-value"/>
        </zeroOrMore>
        <zeroOrMore>
          <ref name="content"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="sendback-reason">
    <element name="SendbackReason">
      <interleave>
        <ref name="input-attributes"/>
        <attribute name="value-type">
          <value>boolean</value>
        </attribute>
        <ref name="instructions-label-optional-text"/>
        <zeroOrMore>
          <ref name="content"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="short-input">
    <element name="ShortInput">
      <interleave>
        <ref name="text-input-attributes"/>
        <attribute name="value-type">
          <value>text</value>
        </attribute>
      </interleave>
    </element>
  </define>
  <define name="tech-check">
    <element name="TechCheck">
      <interleave>
        <ref name="input-attributes"/>
        <attribute name="value-type">
          <value>boolean</value>
        </attribute>
        <optional>
          <ref name="default-answer-boolean"/>
        </optional>
        <ref name="instructions-label-required-text"/>
        <zeroOrMore>
          <ref name="content"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="tech-check-email">
    <element name="TechCheckEmail">
      <optional>
        <attribute name="ident"/>
      </optional>
      <zeroOrMore>
        <ref name="content"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="tech-check-email-view">
    <element name="TechCheckEmailView">
      <attribute name="value-type">
        <value>text</value>
      </attribute>
    </element>
  </define>
  <!-- Contents -->
  <define name="description">
    <element name="Description">
      <interleave>
        <optional>
          <attribute name="ident"/>
        </optional>
        <element name="text">
          <ref name="html"/>
        </element>
        <zeroOrMore>
          <ref name="content"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="display-children-content">
    <element name="DisplayChildren">
      <interleave>
        <optional>
          <attribute name="ident"/>
        </optional>
        <optional>
          <attribute name="child-tag">
            <value>li</value>
          </attribute>
        </optional>
        <optional>
          <attribute name="custom-class"/>
        </optional>
        <optional>
          <attribute name="custom-child-class"/>
        </optional>
        <optional>
          <attribute name="wrapper-tag"/>
        </optional>
        <zeroOrMore>
          <ref name="content"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="display-with-value-content">
    <element name="DisplayWithValue">
      <interleave>
        <optional>
          <attribute name="ident"/>
        </optional>
        <attribute name="visible-with-parent-answer"/>
        <zeroOrMore>
          <ref name="content"/>
        </zeroOrMore>
      </interleave>
    </element>
  </define>
  <define name="export-paper">
    <element name="ExportPaper">
      <interleave>
        <optional>
          <attribute name="ident"/>
        </optional>
        <ref name="instructions-label-optional-text"/>
      </interleave>
    </element>
  </define>
  <!-- IF requires comma, not interleave '&', to distinguish required THEN content from optional ELSE content. -->
  <define name="if">
    <element name="If">
      <attribute name="condition"/>
      <ref name="content"/>
      <optional>
        <ref name="content"/>
      </optional>
    </element>
  </define>
  <define name="error-message">
    <element name="ErrorMessage">
      <interleave>
        <attribute name="key"/>
        <optional>
          <element name="text">
            <text/>
          </element>
        </optional>
      </interleave>
    </element>
  </define>
  <define name="repeat">
    <element name="Repeat">
      <interleave>
        <optional>
          <attribute name="ident"/>
        </optional>
        <optional>
          <attribute name="min"/>
        </optional>
        <optional>
          <attribute name="max"/>
        </optional>
        <attribute name="item-name"/>
        <oneOrMore>
          <ref name="content"/>
        </oneOrMore>
      </interleave>
    </element>
  </define>
  <define name="financial-disclosure-summary">
    <element name="FinancialDisclosureSummary">
      <optional>
        <attribute name="ident"/>
      </optional>
    </element>
  </define>
  <define name="content">
    <choice>
      <ref name="check-box-input"/>
      <ref name="date-picker"/>
      <ref name="description"/>
      <ref name="display-children-content"/>
      <ref name="display-with-value-content"/>
      <ref name="dropdown-input"/>
      <ref name="error-message"/>
      <ref name="export-paper"/>
      <ref name="file-uploader"/>
      <ref name="financial-disclosure-summary"/>
      <ref name="if"/>
      <ref name="paragraph-input"/>
      <ref name="radio-input"/>
      <ref name="repeat"/>
      <ref name="sendback-reason"/>
      <ref name="short-input"/>
      <ref name="tech-check"/>
      <ref name="email-editor"/>
      <ref name="tech-check-email"/>
      <ref name="tech-check-email-view"/>
    </choice>
  </define>
  <start>
    <element name="card">
      <interleave>
        <attribute name="required-for-submission">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
        <attribute name="workflow-display-only">
          <choice>
            <value>true</value>
            <value>false</value>
          </choice>
        </attribute>
        <ref name="content"/>
      </interleave>
    </element>
  </start>
</grammar>
