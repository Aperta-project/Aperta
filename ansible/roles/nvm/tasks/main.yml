---
- name: Install dependencies
  apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
  with_items:
    - git
    - curl
    - build-essential
    - libssl-dev
  tags: nvm

- name: Install nvm
  sudo: yes
  sudo_user: "{{ nvm.user }}"
  git: repo=https://github.com/creationix/nvm.git dest=~/.nvm version={{ nvm.version }}
  tags: nvm

- name: Source nvm in ~/.profile
  sudo: yes
  sudo_user: "{{ nvm.user }}"
  lineinfile: >
    dest=~/.profile
    line="source ~/.nvm/nvm.sh"
  tags: nvm

- name: Install {{ nvm.node_version }}
  command: sudo -iu {{ nvm.user }} nvm install {{ nvm.node_version }}
  register: nvm_install_result
  changed_when: "'is already installed.' not in nvm_install_result.stdout"
  tags: nvm

- name: Echo NVM Version
  command: sudo -iu {{ nvm.user }} nvm --version
  tags: nvm

- name: Check if {{ nvm.node_version }} is the default node version
  shell: sudo -iu {{ nvm.user }} nvm ls | grep -e 'default -> {{ nvm.node_version }}'
  register: nvm_check_default
  changed_when: False
  ignore_errors: True
  tags: nvm

- name: Set default node version to {{ nvm.node_version }}
  command: sudo -iu {{ nvm.user }} nvm alias default {{ nvm.node_version }}
  when: nvm_check_default|failed
  tags: nvm

- name: Check if {{ nvm.bower_version }} is the default bower version
  shell: sudo -iu {{ nvm.user }} nvm exec {{ nvm.node_version }} npm ls bower@global | grep -e 'bower@{{ nvm.bower_version }}'
  register: bower_check
  changed_when: False
  ignore_errors: True
  tags: nvm

- name: Install Bower package
  shell: sudo -iu {{ nvm.user }} nvm exec {{ nvm.node_version }} npm install -g bower@{{ nvm.bower_version }}
  when: bower_check|failed
  tags: nvm
