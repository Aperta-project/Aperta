#!/usr/bin/env bash

# This script will set up valdo in a directory next to your tahi project called ops_valdo/
# when it's done, you'll have to 'cap vagrant deploy' from both tahi and ihat to have
# a fully functional aperta.
#
# This file follows the setup steps outlined in the valdo README
# https://github.com/PLOS/valdo/blob/master/README.md
# The installation steps therein change periodically. So if this script suddenly breaks,
# a good first step in debugging is to figure out if the valdo setup instructions have
# changed.

# exit immediately if any single command fails
set -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
TAHI_DIR="$SCRIPT_DIR/../"
VALDO_REPO_DIR="$TAHI_DIR/../ops_valdo/"
VALDO_FOLDER_DIR="$VALDO_REPO_DIR/valdo/"
APERTA_APP_DIR="$VALDO_FOLDER_DIR/apps/aperta"

command_exists () {
  command -v "$1" >/dev/null 2>&1
}

if ! command_exists s3cmd ; then
  echo "You need to install s3cmd"
  echo "Try 'pip install s3cmd'. For more information, visit https://github.com/s3tools/s3cmd/blob/master/INSTALL"
  exit 1
fi

if [ ! -d "$VALDO_REPO_DIR" ]; then
  git clone git@github.com:PLOS/valdo.git --recursive $VALDO_REPO_DIR
fi
cd "$VALDO_REPO_DIR"
git pull
./refresh_submodules

vagrant plugin install vagrant-vbguest
vagrant plugin install vagrant-salt
vagrant plugin install vagrant-hostmanager
vagrant plugin install vagrant-host-path

extract_md5 () {
  echo $* | grep -o -E '[0-9a-f]{32}'
}

s3_url="s3://valdovm/vbox-aperta.box"
cd "$VALDO_FOLDER_DIR"
if [ -f vbox.box ] ; then
  remoteMD5=$(extract_md5 $(s3cmd -c .s3cfg info ${s3_url} | grep MD5))
  if command_exists md5sum; then
    localMD5=$(extract_md5 $(md5sum vbox.box))
  elif command_exists md5; then
    localMD5=$(extract_md5 $(md5 vbox.box))
  fi

  if [ "$remoteMD5" != "$localMD5" ]; then
    rm -f vbox.box
  fi
fi
if ! [ -f vbox.box ] ; then
    s3cmd -c .s3cfg get ${s3_url} vbox.box
fi
vagrant box add -f vbox vbox.box

scp aperta@aperta-frontend-201.sfo.plos.org:secrets/.ploprc "$HOME/.ploprc"

cd "$APERTA_APP_DIR"
vagrant up

echo "If you see no errors above, your environment should now be ready for a cap deploy."
echo "go to your local tahi and ihat repos and run 'cap vagrant deploy'"
echo "Once you've done the cap deploys, you should see tahi running at http://aperta.vagrant.local and ihat at http://aperta.vagrant.local:8888"

echo "If you see an error about a key mismatch, try 'ssh-keygen -R aperta'"
echo "If you're still having problems connecting to the vagrant, check your /etc/hosts file. You may need to run 'vagrant hostmanager' from ops_valdo/valdo/apps/aperta."
echo "If you're unable to 'vagrant ssh' it might be because your local username doesn't match your PLOS username"
echo "  try running 'VAGRANT_USER=yourplosusername vagrant ssh' instead"
