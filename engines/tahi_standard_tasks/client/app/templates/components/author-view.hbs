{{#if viewState}}
  <div class="author-task-item-view flex-group {{if isAuthorCurrentUser 'current-user' ''}}">
    {{#unless isNotEditable}}
      <div class="author-task-item-view-drag-handle flex-element"></div>
    {{/unless}}

    <div class="author-task-item-position flex-element">.</div>

    <div class="author-task-item-view-text flex-element flex-group" {{action "toggleEditForm"}}>
      <div class="author-name flex-element">
        <div>
          {{displayName}}
        </div>
        {{#if author.confirmedAsCoAuthor}}
          <div data-test-selector="author-confirmed">
            <i class="fa fa-check author-confirmed-check author-confirmed"></i>
            Confirmed
          </div>
        {{else if author.refutedAsCoAuthor}}
          <div data-test-selector="author-refuted">
            <i class="fa fa-minus-circle author-refuted-circle author-refuted"></i>
            Refuted
          </div>
        {{/if}}
      </div>
      <div class="author-email flex-element">{{or author.email author.contactEmail}}</div>

    </div>

    {{#unless isNotEditable}}
      <div class="author-task-item-view-actions flex-element">
        <span class="fa fa-trash scaleIn" {{action "toggleDeleteConfirmation"}}></span>
      </div>
    {{/unless}}
  </div>
{{/if}}

{{#if editState}}
  {{!-- renders: author-form, group-author-form --}}
  {{component componentName
              author=model.object
              authorProxy=model
              validateField=(action "validateField")
              hideAuthorForm="toggleEditForm"
              isNotEditable=isNotEditable
              saveSuccess=(action "toggleEditForm")}}
{{/if}}

{{#if deleteState}}
  <div class="authors-overlay-item-delete">
    <p>This will permanently delete the author. Are you sure?</p>
    <button class="button-secondary button--green knockout" {{action "toggleDeleteConfirmation"}}>Cancel</button>
    <button class="button-secondary button--green knockout" {{action "deleteAuthor"}}>Delete Forever</button>
  </div>
{{/if}}
