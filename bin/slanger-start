#!/usr/bin/env ruby

# Copyright (c) 2018 Public Library of Science

# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

require "bundler"
require "dotenv"
require 'uri'

def validate_event_stream_config!
  return unless ENV['PUSHER_URL'].nil?
  raise "PUSHER_URL was not set in your .env.#{ENV['RAILS_ENV']} and is required to start slanger."
end

def rails_env
  @rails_env ||= ENV.fetch("RAILS_ENV")
end

Bundler.with_clean_env do
  Dotenv.load
  validate_event_stream_config!
  verbose = "-v" if rails_env == "development"
  url = URI.parse(ENV['PUSHER_URL'])
  begin
    exec("slanger --app_key #{url.user} --secret #{url.password} #{verbose} -w #{ENV.fetch('EVENT_STREAM_WS_HOST')}:#{ENV.fetch('EVENT_STREAM_WS_PORT')}")
  rescue => e
    puts "Slanger failed to start. Are you sure it's installed? `gem install slanger`"
    raise e
  end
end
